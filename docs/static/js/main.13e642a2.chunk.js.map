{"version":3,"sources":["App.js","index.js"],"names":["Array","prototype","distinct","from","Set","this","Graph","props","state","data","regione","Papa","parse","download","header","complete","setState","onChange","r","map","denominazione_regione","e","key","value","width","height","filter","margin","top","right","left","bottom","dataKey","type","domain","stroke","strokeWidth","Component","App","ReactDOM","render","document","getElementById"],"mappings":"0PAIAA,MAAMC,UAAUC,SAAW,WACzB,OAAOF,MAAMG,KAAK,IAAIC,IAAIC,Q,IAGtBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,KAAM,MAER,EAAKC,QAAU,KANE,E,gEASE,IAAD,OAClBC,IAAKC,MAAM,mBAAoB,CAC7BC,UAAU,EACVC,QAAQ,EACRC,SAAU,SAAAN,GAAI,OAAI,EAAKO,SAASP,Q,+BAI1B,IACMC,EADP,OAOP,OACE,oCACE,4BAAQO,SAAU,SAAAC,GAAC,OAAI,EAAKR,QAAUQ,IAElCb,KAAKG,MAAMC,KACTJ,KAAKG,MAAMC,KAAKU,KAAI,SAAAD,GAAC,OAAIA,EAAEE,yBACxBlB,WACAiB,KAAI,SAAAE,GAAC,OAAI,4BAAQC,IAAKD,EAAGE,MAAOF,GAAIA,MACvC,MAGN,kBAAC,IAAD,CACEG,MAAO,IACPC,OAAQ,IACRhB,MApBQC,EAoBGL,KAAKG,MAAME,QAnB1B,EAAKF,MAAMC,MACX,EAAKD,MAAMC,KACViB,QAAO,SAAAR,GAAC,OAAIA,EAAEE,wBAA0BV,KACxCgB,QAAO,SAAAR,GAAC,OAAIA,EAAET,MAAQ,iBAiBnBkB,OAAQ,CAACC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAG9C,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,CAAOC,KAAK,SAASC,OAAQ,CAAC,EAAG,OAEjC,kBAAC,IAAD,MAEA,kBAAC,IAAD,MACA,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAMD,KAAK,WAAWD,QAAQ,gBAAgBG,OAAO,UAAUC,YAAa,IAC5E,kBAAC,IAAD,CAAMH,KAAK,WAAWD,QAAQ,iBAAiBG,OAAO,UAAUC,YAAa,U,GApDnEC,aAiELC,EANH,kBACV,oCACA,kBAAC,EAAD,Q,OChEFC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.13e642a2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { LineChart, XAxis, YAxis, Legend, Tooltip, CartesianGrid, Line } from 'recharts'\nimport Papa from 'papaparse'\n\nArray.prototype.distinct = function() {\n  return Array.from(new Set(this))\n}\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: null\n    }\n    this.regione = null\n  }\n\n  componentDidMount() {\n    Papa.parse('dati/regioni.csv', {\n      download: true,\n      header: true,\n      complete: data => this.setState(data)\n    })\n  }\n\n  render() {\n    const data = (regione) =>\n      this.state.data &&\n      this.state.data\n      .filter(r => r.denominazione_regione === regione)\n      .filter(r => r.data >= '2020-05-01')\n\n    return (\n      <>\n        <select onChange={r => this.regione = r}>\n          {\n            this.state.data ?\n              this.state.data.map(r => r.denominazione_regione)\n                .distinct()\n                .map(e => <option key={e} value={e}>{e}</option>)\n            : null\n          }\n        </select>\n        <LineChart\n          width={1000}\n          height={500}\n          data={data(this.state.regione)}\n          margin={{top: 5, right: 30, left: 20, bottom: 5}}\n        >\n\n          <XAxis dataKey=\"data\"/>\n          <YAxis type='number' domain={[0, 250]}/>\n\n          <CartesianGrid />\n\n          <Legend />\n          <Tooltip/>\n\n          <Line type=\"monotone\" dataKey=\"nuovi_risolti\" stroke=\"#8884d8\" strokeWidth={2}/>\n          <Line type=\"monotone\" dataKey=\"nuovi_positivi\" stroke=\"#82ca9d\" strokeWidth={2}/>\n        </LineChart>\n      </>\n    )\n  }\n}\n\nconst App = () => (\n  <>\n  <Graph />\n  </>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'react-skeleton-css/styles/skeleton.2.0.4.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}